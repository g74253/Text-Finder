Principales algoritmos y su descripción: 

Partiendo de que los de las estructuras ya fueron explicados(ver Text-Finder/ Descripcion de las estructuras)
se procede a describir los que no tengan que ver con estructuras como los siguientes:

Llamada Doc y LlamadaDocx:
este algoritmo primero abre un archivo, le da su path, extrae sus atributos y los almacena, inicia el lector, que es 
una instancia de la clase apache.poi.
luego crea un arreglo al que se le asigna el texto leido y se le eliminan los espacios
posterior a eso se itera el arreglo y se eliminan todo lo que no sean letras y se hacen todas minúsculas, y finalmente 
como cada posición del arreglo es una palabra, se vuelve a iterar para crear un nuevo nodo a partir de cada palabra mientras que 
de una vez se va añadiendo al arbol.

Llamada txt:
este algoritmo inicia un archivo, le otorga un path y extrae sus atributos para almacenarlos, 
inicia un lector y un buffer(para segurar lectura segura) y divide todo el texto en lineas las cuales se despojan de los espacios 
y todo lo que no sean letras mediante la implementacion de un arreglo para luego iterarlo y meterlo al arbol.

Llamada PDF: 
este algoritmo se compone de dos clases, esta y LectorPdf todas instancias de apache.pdfbox inicia un archivo, extrae sus atrubutos, 
lo parsea y a partir de eso saca el documento a un stripper que obtiene el numero de paginas así como la inicial y final.
luego extrae su texto mediante .getText() y lo llamamos desde la clase LlamadaPDF que le indica cual archivo abrir, toma el texto extraido por su 
clase compañera(lectorPDF) y lo convierte en un arreglo para quitarle espacios y caracteres distintos a letras. Finalmente añade cada
palabra como un nuevo nodo del arbol pasándole sus atributos también.

Referencia:
Referencia,es un algoritmo que obtiene un poco de texto alrededor de la palabra buscada en el archivo

FolderList:
Folderlist, genera una lista con el nombres de todos los archivos .txt .pdf .docx que se encuentran en una carpeta y sus subcarpetas
